{
  "name": "mrhappy-backend",
  "version": "1.0.0",
  "description": "Backend API for MRhappy Restaurant Platform - Multi-restaurant ordering system with authentication, payments, and real-time tracking",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "dev:debug": "nodemon --inspect server.js",
    "build": "echo 'No build step required for Node.js'",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint . --ext .js,.json --ignore-path .gitignore",
    "lint:fix": "eslint . --ext .js,.json --ignore-path .gitignore --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "db:seed": "node database/seeder.js",
    "db:reset": "node database/reset.js",
    "db:migrate": "node database/migrations/migrate.js",
    "health": "node scripts/health-check.js",
    "logs": "pm2 logs",
    "cluster": "pm2 start ecosystem.config.js",
    "cluster:stop": "pm2 stop all",
    "cluster:restart": "pm2 restart all",
    "docker:build": "docker build -t mrhappy-backend .",
    "docker:run": "docker run -p 5000:5000 --env-file .env mrhappy-backend"
  },
  "keywords": [
    "restaurant",
    "food-delivery",
    "api",
    "nodejs",
    "express",
    "mongodb",
    "authentication",
    "payments",
    "real-time"
  ],
  "author": {
    "name": "MRhappy Development Team",
    "email": "dev@mrhappy.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Co-spectre/MRhappyversion_v2.git"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "express": "^4.18.2",
    "mongoose": "^8.0.3",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "dotenv": "^16.3.1",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "multer": "^1.4.5-lts.1",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "winston": "^3.11.0",
    "morgan": "^1.10.0",
    "nodemailer": "^6.9.7",
    "@sendgrid/mail": "^8.1.0",
    "stripe": "^14.9.0",
    "socket.io": "^4.7.4",
    "redis": "^4.6.11",
    "ioredis": "^5.3.2",
    "agenda": "^5.0.0",
    "sharp": "^0.33.1",
    "cloudinary": "^1.41.0",
    "aws-sdk": "^2.1490.0",
    "twilio": "^4.19.0",
    "firebase-admin": "^11.11.1",
    "google-maps": "^4.3.3",
    "validator": "^13.11.0",
    "moment": "^2.29.4",
    "moment-timezone": "^0.5.43",
    "uuid": "^9.0.1",
    "crypto": "^1.0.1",
    "pm2": "^5.3.0"
  },
  "devDependencies": {
    "nodemon": "^3.0.2",
    "jest": "^29.7.0",
    "supertest": "^6.3.3",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-node": "^11.1.0",
    "prettier": "^3.1.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "@types/jest": "^29.5.8",
    "mongodb-memory-server": "^9.1.3",
    "faker": "^6.6.6",
    "cross-env": "^7.0.3"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "**/*.js",
      "!node_modules/**",
      "!coverage/**",
      "!dist/**",
      "!*.config.js"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "testMatch": [
      "**/__tests__/**/*.js",
      "**/?(*.)+(spec|test).js"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ]
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "es2021": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended",
      "prettier"
    ],
    "plugins": [
      "jest",
      "node"
    ],
    "rules": {
      "no-console": "warn",
      "no-unused-vars": "error",
      "no-undef": "error",
      "prefer-const": "error",
      "no-var": "error"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm test"
    }
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  }
}
